{"mappings":"YAsBA,IAAMA,EAAWC,YAAW,WAC1BC,QAAQC,IAAI,a,GACX,KAEHC,aAAaJ,GAEb,IAAIK,EAAI,EAIFC,EAAaC,aAAY,WAC7BF,GAAK,EACLH,QAAQC,IAAIE,E,GACX,KAEHJ,YAAW,WACTO,cAAcF,E,GACb,I","sources":["src/js/async.js"],"sourcesContent":["/*\n * Síncronia vs Asíncronia JS\n\n */\n\n// const fn = () => {\n//   console.log('In function');\n// };\n\n// setTimeout(() => {\n//   console.log('in timeout');\n// }, 0);\n\n// console.log('Start');\n\n// fn();\n\n// console.log('End');\n//*  Стек виклику функцій (http://latentflip.com/loupe/?code=Y29uc29sZS5sb2coJ2ZpcnN0Jyk7CgpzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgY29uc29sZS5sb2coJ2lubmVyIHNldFRpbWVvdXQnKTsKfSwgMTAwMCk7Cgpjb25zb2xlLmxvZygnc2Vjb25kJyk7!!!)\n\n//* Temporizadores  window.setTimeout(callback, delay, arg1, arg2, ...);\n\nconst timoutId = setTimeout(() => {\n  console.log('in timeout');\n}, 5000);\n\nclearTimeout(timoutId);\n\nlet i = 0;\n\n//* Intervalo\n\nconst intervalId = setInterval(() => {\n  i += 1;\n  console.log(i);\n}, 1000);\n\nsetTimeout(() => {\n  clearInterval(intervalId);\n}, 5000);\n\n//* Borrador de intervalos y tiempos de espera clearInterval(intervalID), clearTimeout(timeoutID)\n"],"names":["$fca1ac7f0101f377$var$timoutId","setTimeout","console","log","clearTimeout","$fca1ac7f0101f377$var$i","$fca1ac7f0101f377$var$intervalId","setInterval","clearInterval"],"version":3,"file":"async.3a5f5ddb.js.map"}